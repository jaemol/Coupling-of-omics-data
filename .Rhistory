#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.2,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_untreated_treated <- netAnalyze(net_untreated_treated,
centrLCC = FALSE,
avDissIgnoreInf = TRUE,
sPathNorm = FALSE,
clustMethod = "cluster_fast_greedy",
#hubPar = c("degree", "between", "closeness"),
hubPar = "eigenvector",
hubQuant = 0.9,
lnormFit = TRUE,
normDeg = FALSE,
normBetw = FALSE,
normClose = FALSE,
normEigen = FALSE)
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres2.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
#rmSingles = "inboth",
sameLayout = TRUE,
nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres2.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
dev.off() # shutting off image saving
# Network construction - TDAvsControl
net_untreated_treated <- netConstruct(data = data_untreated,
data2 = data_treated,
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.45,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_untreated_treated <- netAnalyze(net_untreated_treated,
centrLCC = FALSE,
avDissIgnoreInf = TRUE,
sPathNorm = FALSE,
clustMethod = "cluster_fast_greedy",
#hubPar = c("degree", "between", "closeness"),
hubPar = "eigenvector",
hubQuant = 0.9,
lnormFit = TRUE,
normDeg = FALSE,
normBetw = FALSE,
normClose = FALSE,
normEigen = FALSE)
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres45.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
dev.off() # shutting off image saving
# Network construction - TDAvsControl
net_untreated_treated <- netConstruct(data = data_untreated,
data2 = data_treated,
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.7,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_untreated_treated <- netAnalyze(net_untreated_treated,
centrLCC = FALSE,
avDissIgnoreInf = TRUE,
sPathNorm = FALSE,
clustMethod = "cluster_fast_greedy",
#hubPar = c("degree", "between", "closeness"),
hubPar = "eigenvector",
hubQuant = 0.9,
lnormFit = TRUE,
normDeg = FALSE,
normBetw = FALSE,
normClose = FALSE,
normEigen = FALSE)
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres7.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
dev.off() # shutting off image saving
library(NetCoMi)
# Network construction - TDAvsControl
net_untreated_treated <- netConstruct(data = data_untreated,
data2 = data_treated,
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.2,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_untreated_treated <- netAnalyze(net_untreated_treated,
centrLCC = FALSE,
avDissIgnoreInf = TRUE,
sPathNorm = FALSE,
clustMethod = "cluster_fast_greedy",
#hubPar = c("degree", "between", "closeness"),
hubPar = "eigenvector",
hubQuant = 0.9,
lnormFit = TRUE,
normDeg = FALSE,
normBetw = FALSE,
normClose = FALSE,
normEigen = FALSE)
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres2.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
dev.off() # shutting off image saving
# loading NetCoMi library
library(NetCoMi)
# loading functions
source("Programming/extracting_data_NCLTEE.R")
source("Programming/data_filtering.R")
source("Programming/Functions.R")
# loading data
chosenDataSet       = "metab"       # "metab" or "genom"
chosenTaxonomy      <- "species"    # "species" or "genus"
chosenWeek          <- "null"       # "1", "4", or "10"
chosenCutoffMass    <- 200          # arbitrary value, removing based on column name
chosenNormalization <- "peak"        # can either be 'mad', 'median', 'mean' or 'peak'
inData <- extracting_data_NATH(whichWeek=chosenWeek, whichTaxLevel=chosenTaxonomy,
cutOffMetabMass=chosenCutoffMass, whichNormalization=chosenNormalization)
inData <- extracting_data_NCLTEE(whichWeek=chosenWeek, whichTaxLevel=chosenTaxonomy,
cutOffMetabMass=chosenCutoffMass, whichNormalization=chosenNormalization)
# loading functions
source("Programming/extracting_data_NCLTEE.R")
# loading in data
df_metab_original <- read.csv("Data/allData_LCMS_metabolomics.csv", header = FALSE,
sep = ";", stringsAsFactors = FALSE, strip.white = TRUE, skip = 1)
colnames(df_metab_original) = read.csv("Data/allData_LCMS_metabolomics.csv", header = F,
sep = ";", stringsAsFactors = FALSE, strip.white = TRUE, nrows = 1)
rownames(df_metab_original) = read.csv("Data/allData_LCMS_metabolomics.csv", header = F,
sep = ";", stringsAsFactors = FALSE, strip.white = TRUE)[-1,1]
# removing first column (masses)
df_metab_original = df_metab_original[,-1]
# transposing the data frame
df_metab_tmp1 = as.data.frame(t(df_metab_original))
# loading in metadata metabolomics sheet - changed data to .csv first, to make it work
metadata_metabolomics  <- read.csv("Data/Metadata-metabolomics.csv", fill = TRUE, header = TRUE, sep = ";")
# fetching first row
rownam_samples_metab  <- rownames(df_metab_tmp1)
# running through the names, matching them with phyloseq naming
metab_new_names <- rownam_samples_metab
rm(list=ls())
# loading functions
source("Programming/extracting_data_NCLTEE.R")
source("Programming/data_filtering.R")
source("Programming/Functions.R")
# loading data
chosenDataSet       = "metab"       # "metab" or "genom"
chosenTaxonomy      <- "species"    # "species" or "genus"
chosenWeek          <- "null"       # "1", "4", or "10"
chosenCutoffMass    <- 200          # arbitrary value, removing based on column name
chosenNormalization <- "peak"        # can either be 'mad', 'median', 'mean' or 'peak'
inData <- extracting_data_NCLTEE(whichWeek=chosenWeek, whichTaxLevel=chosenTaxonomy,
cutOffMetabMass=chosenCutoffMass, whichNormalization=chosenNormalization)
# loading functions
source("Programming/extracting_data_NCLTEE.R")
source("Programming/data_filtering.R")
source("Programming/Functions.R")
# loading data
chosenDataSet       = "metab"       # "metab" or "genom"
chosenTaxonomy      <- "species"    # "species" or "genus"
chosenWeek          <- "null"       # "1", "4", or "10"
chosenCutoffMass    <- 200          # arbitrary value, removing based on column name
chosenNormalization <- "peak"        # can either be 'mad', 'median', 'mean' or 'peak'
inData <- extracting_data_NCLTEE(whichWeek=chosenWeek, whichTaxLevel=chosenTaxonomy,
cutOffMetabMass=chosenCutoffMass, whichNormalization=chosenNormalization)
# filtering data
chosenCutoffFiltering <- 0.78
inData <- data_filtering(data=inData, whichDataSet=chosenDataSet, whichWeek=chosenWeek, cutOffOrAuto=chosenCutoffFiltering)
# can only select week number 1, 4, 6, or 10
choiceOfWeekHere <- "null"
if (choiceOfWeekHere != "null") {
data = inData[gsub(".+-(?=\\d+$)", "", rownames(inData), perl = TRUE)==choiceOfWeekHere,]
} else {
data = inData
}
feat1 = data$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA
feature2 = "257.1857486"
feat2 = data[which(stringr::str_split_fixed(string = colnames(data),
pattern = "[_]",7)==feature2, arr.ind = TRUE)[1]]
View(inData)
# loading data
chosenDataSet       = "metab"       # "metab" or "genom"
chosenTaxonomy      <- "species"    # "species" or "genus"
chosenWeek          <- "null"       # "1", "4", or "10"
chosenCutoffMass    <- 200          # arbitrary value, removing based on column name
chosenNormalization <- "peak"        # can either be 'mad', 'median', 'mean' or 'peak'
inData <- extracting_data_NCLTEE(whichWeek=chosenWeek, whichTaxLevel=chosenTaxonomy,
cutOffMetabMass=chosenCutoffMass, whichNormalization=chosenNormalization)
# filtering data
chosenCutoffFiltering <- 0.80
inData <- data_filtering(data=inData, whichDataSet=chosenDataSet, whichWeek=chosenWeek, cutOffOrAuto=chosenCutoffFiltering)
# can only select week number 1, 4, 6, or 10
choiceOfWeekHere <- "null"
if (choiceOfWeekHere != "null") {
data = inData[gsub(".+-(?=\\d+$)", "", rownames(inData), perl = TRUE)==choiceOfWeekHere,]
} else {
data = inData
}
feat2 = data[which(stringr::str_split_fixed(string = colnames(data),
pattern = "[_]",7)==feature2, arr.ind = TRUE)[1]]
feat1 = data$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA
# finding the results and printing them out
print(paste("Generating results for features", feature1, "and", feature2))
# feat1 = data$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA
# feature2 = "257.1857486"
feature1 = "Cohaesibacter"
# finding the results and printing them out
print(paste("Generating results for features", feature1, "and", feature2))
print(paste("The ordinal spearman correlation is:", cor(feat1, feat2, method = "spear")))
print(paste("The log1p spearman correlation is:", cor(log1p(feat1), log1p(feat2), method = "spear")))
print(paste("The ordinal pearson correlation is:", cor(feat1, feat2, method = "pear")))
print(paste("The log1p pearson correlation is:", cor(log1p(feat1), log1p(feat2), method = "pear")))
print("Plotting the correlation between the two features")
plot(unlist(feat1) ~ unlist(feat2), ylab = feature1, xlab = feature2)
print("Building a linear model between the two features")
LM = lm(log1p(unlist(feat1))~log1p(unlist(feat2)))
LM = lm(unlist(feat1)~unlist(feat2))
print("Summary of the linear model")
print(summary(LM))
print("Plotting the related plots to the linear model")
par(mfrow=c(2,2))
plot(LM)
par(mfrow=c(1,1))
############################
# compare two networks differentiated upon presence of TDA or not
# splitting the data set of all weeks into three; TDA, noTDA and control
data_TDA      <- data[substr(rownames(data), 1, 1) == "D",]
data_noTDA    <- data[substr(rownames(data), 1, 1) == "P",]
data_control  <- data[substr(rownames(data), 1, 1) == "C",]
cor(data_TDA$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA,data_TDA$`257.1857486`,method = "spear")
cor(data_TDA$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA.1,data_TDA$`257.1857486`,method = "spear")
plot(data_TDA$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA.1,data_TDA$`257.1857486`)
feat1 = data$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA1
feature2 = "257.1857486"
feature1 = "Cohaesibacter"
print(paste("Generating results for features", feature1, "and", feature2))
print(paste("The ordinal spearman correlation is:", cor(feat1, feat2, method = "spear")))
feat1 = data$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA.1
print(paste("Generating results for features", feature1, "and", feature2))
print(paste("The ordinal spearman correlation is:", cor(feat1, feat2, method = "spear")))
print(paste("The log1p spearman correlation is:", cor(log1p(feat1), log1p(feat2), method = "spear")))
print(paste("The ordinal pearson correlation is:", cor(feat1, feat2, method = "pear")))
print(paste("The log1p pearson correlation is:", cor(log1p(feat1), log1p(feat2), method = "pear")))
print("Plotting the correlation between the two features")
plot(unlist(feat1) ~ unlist(feat2), ylab = feature1, xlab = feature2)
print("Building a linear model between the two features")
LM = lm(log1p(unlist(feat1))~log1p(unlist(feat2)))
LM = lm(unlist(feat1)~unlist(feat2))
print("Summary of the linear model")
print(summary(LM))
print("Plotting the related plots to the linear model")
par(mfrow=c(2,2))
plot(LM)
par(mfrow=c(1,1))
feat1tda <- data_TDA$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA.1
feat1notda <- data_noTDA$DATA.Bacteria_Proteobacteria_Alphaproteobacteria_Rhizobiales_Rhizobiaceae_Cohaesibacter_NA.1
feat2tda <- data_TDA$`257.1857486`
feat2notda <- data_noTDA$`257.1857486`
plot(feat2notda~feat1notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07)
plot(feat2tda~feat1tda, main = "Correlation with TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07)
par(mfrow = c(1,2))
plot(feat2notda~feat1notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07)
plot(feat2tda~feat1tda, main = "Correlation with TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07)
plot(feat2notda~feat1notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3)
plot(feat2notda~feat1notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, color = "blue")
plot(feat2tda~feat1tda, main = "Correlation with TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, color = "blue")
plot(feat2notda~feat1notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, color = "blue")
plot(feat2notda~feat1notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
plot(feat2tda~feat1tda, main = "Correlation with TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
LMtda     = lm(feat1tda~feat2tda)
LMnotda   = lm(feat1notda~feat2notda)
summary(LMtda)
summary(LMnotda)
lines(LMtda, lwd = 4, col = "dark red")
abline(LMtda, lwd = 4, col = "dark red")
?text
par(mfrow = c(1,2))
plot(feat2notda~feat1notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
text(0,0,labels = "Spearman's Rank Correlation = 0.2")
plot(feat2tda~feat1tda, main = "Correlation with TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMtda, lwd = 4, col = "dark red")
LMtda     = lm(log1p(feat1tda)~log1p(feat2tda))
LMnotda   = lm(log1p(feat1notda)~log1p(feat2notda))
summary(LMtda)
summary(LMnotda)
par(mfrow = c(1,2))
plot(feat2notda~feat1notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
text(0,0,labels = "Spearman's Rank Correlation = 0.2")
plot(feat2tda~feat1tda, main = "Correlation with TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMtda, lwd = 4, col = "dark red")
plot(log1p(feat2notda)~log1p(feat1notda), main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
LMtda     = lm(feat1tda~feat2tda)
LMnotda   = lm(feat1notda~feat2notda)
summary(LMtda)
summary(LMnotda)
par(mfrow = c(1,2))
plot(feat2notda~feat1notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
text(0,0,labels = "Spearman's Rank Correlation = 0.2")
plot(feat2tda~feat1tda, main = "Correlation with TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMtda, lwd = 4, col = "dark red")
text("southeast",labels = "Spearman's Rank Correlation = 0.2")
plot(feat1notda~feat2notda, main = "Correlation with no TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
plot(feat1tda~feat2tda, main = "Correlation with TDA", xlab = "Relative bacterial abundance", ylab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMtda, lwd = 4, col = "dark red")
plot(feat1notda~feat2notda, main = "Correlation with no TDA", ylab = "Relative bacterial abundance", xlab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
plot(feat1tda~feat2tda, main = "Correlation with TDA", ylab = "Relative bacterial abundance", xlab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMtda, lwd = 4, col = "dark red")
?mtext
plot(feat1notda~feat2notda, main = "Correlation with no TDA", ylab = "Relative bacterial abundance", xlab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
mtext(text = "Spearman's Rank Correlation = 0.2", side = 3, outer = FALSE)
mtext(text = "Spearman's Rank Correlation = 0.2", side = 3, outer = TRUE)
plot(feat1notda~feat2notda, main = "Correlation with no TDA", ylab = "Relative bacterial abundance", xlab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
mtext(text = "Spearman's Rank Correlation = 0.2", side = 3, outer = TRUE)
plot(feat1notda~feat2notda, main = "Correlation with no TDA", ylab = "Relative bacterial abundance", xlab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
mtext(text = "Spearman's Rank Correlation = 0.2", side = 2, outer = FALSE)
?legend
plot(feat1notda~feat2notda, main = "Correlation with no TDA", ylab = "Relative bacterial abundance", xlab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
#mtext(text = "Spearman's Rank Correlation = 0.2", side = 2, outer = FALSE)
legend("southeast", legend = "Spearman")
#mtext(text = "Spearman's Rank Correlation = 0.2", side = 2, outer = FALSE)
legend("topright", legend = "Spearman")
cor(feat1notda~feat2notda, method = "spear")
cor(feat1notda,feat2notda, method = "spear")
cor(feat1tda,feat2tda, method = "spear")
plot(feat1notda~feat2notda, main = "Correlation with no TDA", ylab = "Relative bacterial abundance", xlab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
#mtext(text = "Spearman's Rank Correlation = 0.2", side = 2, outer = FALSE)
legend("topright", legend = "Spearman's Rank correlation = 0.36")
plot(feat1tda~feat2tda, main = "Correlation with TDA", ylab = "Relative bacterial abundance", xlab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMtda, lwd = 4, col = "dark red")
legend("topright", legend = "Spearman's Rank correlation = 0.84")
plot(feat1notda~feat2notda, main = "Correlation with no TDA", ylab = "Relative bacterial abundance", xlab = "Relative metabolite abundance",
cex.lab = 1.5, cex.axis = 1.2, cex.main = 2.07, lwd = 3, col = "blue")
abline(LMnotda, lwd = 4, col = "dark red")
#mtext(text = "Spearman's Rank Correlation = 0.2", side = 2, outer = FALSE)
legend("left", legend = "Spearman's Rank correlation = 0.36")
