clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
plot(props_single_front,
labelScale = F,
cexLabels = 1.3,
#title1 = paste("Single network with Spearman, treated", chosenWeek, chosenTaxonomy),
showTitle = T,
nodeSize = "mclr",
shortenLabels = "none",
cexNodes = 1.5,
cexTitle = 2.3)
net_single_front <- netConstruct(data_noTDA,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
filtTax = "highestVar",
filtTaxPar = list(highestVar = 50),
measure = "spearman",thresh = chosenThreshold,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_single_front <- netAnalyze(net_single_front,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
plot(props_single_front,
labelScale = F,
cexLabels = 1.3,
#title1 = paste("Single network with Spearman, treated", chosenWeek, chosenTaxonomy),
showTitle = T,
nodeSize = "mclr",
shortenLabels = "none",
cexNodes = 1.5,
cexTitle = 2.3)
plot(props_single_front,
labelScale = F,
cexLabels = 0,
#title1 = paste("Single network with Spearman, treated", chosenWeek, chosenTaxonomy),
showTitle = T,
nodeSize = "mclr",
shortenLabels = "none",
cexNodes = 1.5,
cexTitle = 2.3)
rm(list=ls())
# loading NetCoMi library
library(NetCoMi)
# loading functions
source("Programming/extracting_data_RWA.R")
source("Programming/data_filtering.R")
source("Programming/Functions.R")
# loading data
chosenWeek      <- "Week 02"
chosenTaxonomy  <- "genus"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy, loadOrigData = TRUE)
# filtering data
inData <- data_filtering(inData, whichDataSet = "genom")
# resetting plot window
par(mfrow=c(1,1))
# excluding testID and OUA (antibiotics used or not)
#inData = data
testID  <- inData$testID
OUA     <- inData$OUA
data = subset(inData, select = -c(testID, OUA))
dataOneColumns <- grep(x = colnames(data), pattern = "DATA.*")
colVector <- 1:length(colnames(data))
shapeArray <- 1:length(colnames(data))
dataOrigin <- 1:length(colnames(data))
for (i in 1:length(colVector)) {
if (i<=max(dataOneColumns)) {
colVector[i] = "green"
shapeArray[i] = "circle"
dataOrigin[i] = "16s"
} else {
colVector[i] = "red"
shapeArray[i] = "triangle"}
dataOrigin[i] = "qPCR"
}
if (chosenTaxonomy=="genus"){
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
} else {
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
}
# network untreated, single network with spearman association
data_untreated <- data[which(OUA==1),]
net_single_untreated <- netConstruct(data_untreated,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 50),
measure = "spearman",thresh = 0.5,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_untreated <- netAnalyze(net_single_untreated,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
plot(props_single_untreated,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman, untreated", chosenWeek, chosenTaxonomy),
showTitle = T,
nodeSize = "mclr",
shortenLabels = "none",
cexNodes = 1.5,
cexTitle = 2.3,
nodeColor = "feature",
featVecCol = dataorigin,
colVector = c("green", "red"))
plot(props_single_untreated,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman, untreated", chosenWeek, chosenTaxonomy),
showTitle = T,
nodeSize = "mclr",
shortenLabels = "none",
cexNodes = 1.5,
cexTitle = 2.3,
nodeColor = "feature",
featVecCol = dataOrigin,
colVector = c("green", "red"))
dataOrigin
rm(list=ls())
# loading functions
source("Programming/extracting_data_RWA.R")
source("Programming/data_filtering.R")
source("Programming/Functions.R")
# loading data
chosenWeek      <- "Week 02"
chosenTaxonomy  <- "genus"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy, loadOrigData = TRUE)
# filtering data
inData <- data_filtering(inData, whichDataSet = "genom")
# resetting plot window
par(mfrow=c(1,1))
# excluding testID and OUA (antibiotics used or not)
#inData = data
testID  <- inData$testID
OUA     <- inData$OUA
data = subset(inData, select = -c(testID, OUA))
dataOneColumns <- grep(x = colnames(data), pattern = "DATA.*")
colVector <- 1:length(colnames(data))
shapeArray <- 1:length(colnames(data))
dataOrigin <- 1:length(colnames(data))
for (i in 1:length(colVector)) {
if (i<=max(dataOneColumns)) {
colVector[i] = "green"
shapeArray[i] = "circle"
dataOrigin[i] = "16s"
} else {
colVector[i] = "red"
shapeArray[i] = "triangle"
dataOrigin[i] = "qPCR"
}
}
if (chosenTaxonomy=="genus"){
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
} else {
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
}
# network untreated, single network with spearman association
data_untreated <- data[which(OUA==1),]
net_single_untreated <- netConstruct(data_untreated,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 50),
measure = "spearman",thresh = 0.5,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_untreated <- netAnalyze(net_single_untreated,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
plot(props_single_untreated,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman, untreated", chosenWeek, chosenTaxonomy),
showTitle = T,
nodeSize = "mclr",
shortenLabels = "none",
cexNodes = 1.5,
cexTitle = 2.3,
nodeColor = "feature",
featVecCol = dataOrigin,
colVector = c("green", "red"))
dataOrigin
# Network construction - TDAvsControl
net_untreated_treated <- netConstruct(data = data_untreated,
data2 = data_treated,
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.2,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_untreated_treated <- netAnalyze(net_untreated_treated,
centrLCC = FALSE,
avDissIgnoreInf = TRUE,
sPathNorm = FALSE,
clustMethod = "cluster_fast_greedy",
#hubPar = c("degree", "between", "closeness"),
hubPar = "eigenvector",
hubQuant = 0.9,
lnormFit = TRUE,
normDeg = FALSE,
normBetw = FALSE,
normClose = FALSE,
normEigen = FALSE)
library(NetCoMi)
# Network construction - TDAvsControl
net_untreated_treated <- netConstruct(data = data_untreated,
data2 = data_treated,
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.2,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
## Comparative network - treated vs untreated
data_untreated <- data[which(OUA==1),]
data_treated <- data[which(OUA==0),]
# Network construction - TDAvsControl
net_untreated_treated <- netConstruct(data = data_untreated,
data2 = data_treated,
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.2,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_untreated_treated <- netAnalyze(net_untreated_treated,
centrLCC = FALSE,
avDissIgnoreInf = TRUE,
sPathNorm = FALSE,
clustMethod = "cluster_fast_greedy",
#hubPar = c("degree", "between", "closeness"),
hubPar = "eigenvector",
hubQuant = 0.9,
lnormFit = TRUE,
normDeg = FALSE,
normBetw = FALSE,
normClose = FALSE,
normEigen = FALSE)
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres2.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
#rmSingles = "inboth",
sameLayout = TRUE,
nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres2.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
dev.off() # shutting off image saving
# Network construction - TDAvsControl
net_untreated_treated <- netConstruct(data = data_untreated,
data2 = data_treated,
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.45,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_untreated_treated <- netAnalyze(net_untreated_treated,
centrLCC = FALSE,
avDissIgnoreInf = TRUE,
sPathNorm = FALSE,
clustMethod = "cluster_fast_greedy",
#hubPar = c("degree", "between", "closeness"),
hubPar = "eigenvector",
hubQuant = 0.9,
lnormFit = TRUE,
normDeg = FALSE,
normBetw = FALSE,
normClose = FALSE,
normEigen = FALSE)
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres45.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
dev.off() # shutting off image saving
# Network construction - TDAvsControl
net_untreated_treated <- netConstruct(data = data_untreated,
data2 = data_treated,
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.7,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_untreated_treated <- netAnalyze(net_untreated_treated,
centrLCC = FALSE,
avDissIgnoreInf = TRUE,
sPathNorm = FALSE,
clustMethod = "cluster_fast_greedy",
#hubPar = c("degree", "between", "closeness"),
hubPar = "eigenvector",
hubQuant = 0.9,
lnormFit = TRUE,
normDeg = FALSE,
normBetw = FALSE,
normClose = FALSE,
normEigen = FALSE)
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres7.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
dev.off() # shutting off image saving
library(NetCoMi)
# Network construction - TDAvsControl
net_untreated_treated <- netConstruct(data = data_untreated,
data2 = data_treated,
#filtTax = "highestVar",
#filtTaxPar = list(highestVar = 76),
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 50),
measure = "pear", thresh = 0.2,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3, weighted = T,
seed = 123456)
props_untreated_treated <- netAnalyze(net_untreated_treated,
centrLCC = FALSE,
avDissIgnoreInf = TRUE,
sPathNorm = FALSE,
clustMethod = "cluster_fast_greedy",
#hubPar = c("degree", "between", "closeness"),
hubPar = "eigenvector",
hubQuant = 0.9,
lnormFit = TRUE,
normDeg = FALSE,
normBetw = FALSE,
normClose = FALSE,
normEigen = FALSE)
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
# for saving the plot as an image
png(filename = "Treated_Vs_Untreated_thres2.png",
width = 4000, height = 3000,units = "px", pointsize = 12,
bg = "white", res = 300, family = "", restoreConsole = TRUE,
type = c("windows", "cairo", "cairo-png"),
symbolfamily = "default")
plot(props_untreated_treated,
#layout = lay_fr,
#layout = "triangle",
rmSingles = "inboth",
sameLayout = TRUE,
#nodeColor = colVector,
#featVecShape = shapeArray,
nodeSize = "mclr",
labelScale = F,
shortenLabels = "none",
cexNodes = 1.5,
cexLabels = 1.3,
cexHubLabels = 1,
cexTitle = 3.7,
groupNames = c("Untreated", "Treated"),
hubBorderCol  = "gray40")
dev.off() # shutting off image saving
