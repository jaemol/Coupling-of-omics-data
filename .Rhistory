inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
testID  <- inData$testID
OUA     <- inData$OUA
inData = subset(inData, select = -c(testID, OUA))
# if the variance is equal to zero, then its a zero-column
#which(unname(apply(inData, 2, var))==0)
throwAway <- which(apply(inData, 2, var)==0)[]
# dropping columns by index
inData = inData[, -throwAway]
rm(throwAway) # to save memory
print("Generating metadata...")
## finding different interesting information on the set
## mean, var, STD, ratio of zeros,
meanData  <- unname(apply(inData, 2, mean))
stdData   <- unname(apply(inData, 2, sd))
varData   <- unname(apply(inData, 2, var))
ratioData <- unname(apply(inData, 2, function(x){length(which(x==0))/length(x)}))
CVData    <- unname(apply(inData, 2, function(x){sd(x)/mean(x)}))
plot(sort(meanData), main = "Mean Data")
plot(sort(stdData), main = "Standard Variations")
plot(sort(varData), main = "Variance")
plot(sort(ratioData), main = "Singleton ratios")
plot(sort(CVData), main = "Relative standard deviation")
# fitting Michaelis-Menten function to data
print("Fitting Michaelis-Menten function...")
time_frame <- seq(from = 1, to = length(ratioData), by = 1)
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(sort(ratioData) ~ Vm/(1+exp(K+time_frame)), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(sort(ratioData) ~ Vm/(1+exp(-K+time_frame)), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(sort(ratioData) ~ Vm/(1+exp(-K+c*time_frame)), start = list(Vm=max(ratioData), K=max(time_frame, c=25) / 2))
time_frame
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(sort(ratioData) ~ Vm/(1+exp(-K*(c+time_frame))), start = list(Vm=max(ratioData), K=max(time_frame, c=25) / 2))
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(sort(ratioData) ~ Vm/(1+exp(-K*(c+time_frame))), start = list(Vm=max(ratioData), K=max(time_frame) / 2, c = 25))
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(sort(ratioData) ~ Vm/(1+exp(-K*(c+time_frame))), start = list(Vm=max(ratioData), K=max(time_frame) / 2, c = 100))
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(sort(ratioData) ~ Vm/(1+exp(-growthRate*(K+time_frame))), start = list(Vm=max(ratioData), K=max(time_frame) / 2, growthRate = 0.5))
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(sort(ratioData) ~ Vm/(1+exp(-growthRate*(K+time_frame))), start = list(Vm=max(ratioData), K=max(time_frame)/2, growthRate=0.5))
time_frame <- seq(from = 1, to = length(ratioData), by = 1)
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(sort(ratioData) ~ Vm/(1+exp(-growthRate*(K+time_frame))), start = list(Vm=max(ratioData), K=max(time_frame)/2, growthRate=0.5))
#mmModel <- nls(sort(ratioData) ~ Vm*time_frame/(K+time_frame), start = list(Vm=max(ratioData), K=max(time_frame) / 2))
mmModel <- nls(ratioData ~ Vm/(1+exp(-growthRate*(K+time_frame))),
start = list(Vm=max(ratioData), K=max(time_frame)/2, growthRate=0.5))
# loading functions
source("Programming/extracting_data_KAT.R")
source("Programming/data_filtering.R")
# loading data
chosenWeek      <- "null"
chosenTaxonomy  <- "genus"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
# filtering data
inData <- data_filtering(inData)
# excluding testID and OUA (antibiotics used or not)
#inData = data
testID  <- inData$testID
OUA     <- inData$OUA
data = subset(inData, select = -c(testID, OUA))
dataOneColumns <- grep(x = colnames(data), pattern = "DATA.*")
colVector <- 1:length(colnames(data))
for (i in 1:length(colVector)) {
if (i<=max(dataOneColumns)) {colVector[i] = "green"} else {colVector[i] = "red"}
}
if (chosenTaxonomy=="genus"){
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
} else {
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
}
# building single network with SPRING as association measure - Full dataset, both treated and untreated
net_single_fullSet <- netConstruct(data,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.6,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_fullSet <- netAnalyze(net_single_fullSet,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
#?summary.microNetProps
summary(props_single_fullSet, numbNodes = 5L)
plot(props_single_fullSet,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman",chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Positive","Negative"),
cex=0.6,col=c("green","red"),pch=c(".","."),lwd = c(3,3))
legend(x=0.85,y=0.6,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
# network untreated, single network with spearman association
data_untreated <- data[which(OUA==0),]
net_single_untreated <- netConstruct(data_untreated,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.6,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_untreated <- netAnalyze(net_single_untreated,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
plot(props_single_untreated,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman, untreated", chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
# network treated, single network with spearman association
data_treated <- data[which(OUA==1),]
net_single_treated <- netConstruct(data_treated,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.5,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_treated <- netAnalyze(net_single_treated,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
plot(props_single_treated,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman, treated", chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
summary(props_single_treated, numbNodes = 5L)
# loading data
chosenWeek      <- "Week 02"
chosenTaxonomy  <- "species"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
# loading data
chosenWeek      <- "week 02"
chosenTaxonomy  <- "species"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
# loading data
chosenWeek      <- "Week 06"
chosenTaxonomy  <- "species"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
chosenWeek <- "null"
chosenTaxonomy  <- "species"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
unique(inData$SAMPLEWEEK)
unique(data_16s_original$SAMPLEWEEK)
# loading data
chosenWeek      <- "Week 06"
chosenTaxonomy  <- "species"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
# filtering data
inData <- data_filtering(inData)
# excluding testID and OUA (antibiotics used or not)
#inData = data
testID  <- inData$testID
OUA     <- inData$OUA
data = subset(inData, select = -c(testID, OUA))
dataOneColumns <- grep(x = colnames(data), pattern = "DATA.*")
colVector <- 1:length(colnames(data))
for (i in 1:length(colVector)) {
if (i<=max(dataOneColumns)) {colVector[i] = "green"} else {colVector[i] = "red"}
}
if (chosenTaxonomy=="genus"){
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
} else {
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
}
# building single network with SPRING as association measure - Full dataset, both treated and untreated
net_single_fullSet <- netConstruct(data,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.6,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_fullSet <- netAnalyze(net_single_fullSet,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
#?summary.microNetProps
summary(props_single_fullSet, numbNodes = 5L)
plot(props_single_fullSet,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman",chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Positive","Negative"),
cex=0.6,col=c("green","red"),pch=c(".","."),lwd = c(3,3))
legend(x=0.85,y=0.6,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
# network untreated, single network with spearman association
data_untreated <- data[which(OUA==0),]
net_single_untreated <- netConstruct(data_untreated,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.6,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_untreated <- netAnalyze(net_single_untreated,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
plot(props_single_untreated,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman, untreated", chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
# network treated, single network with spearman association
data_treated <- data[which(OUA==1),]
net_single_treated <- netConstruct(data_treated,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.5,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_treated <- netAnalyze(net_single_treated,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
plot(props_single_treated,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman, treated", chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
# loading functions
source("Programming/extracting_data_KAT.R")
source("Programming/data_filtering.R")
# loading data
chosenWeek      <- "Week 06"
chosenTaxonomy  <- "species"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
# filtering data
inData <- data_filtering(inData)
# excluding testID and OUA (antibiotics used or not)
#inData = data
testID  <- inData$testID
OUA     <- inData$OUA
data = subset(inData, select = -c(testID, OUA))
dataOneColumns <- grep(x = colnames(data), pattern = "DATA.*")
colVector <- 1:length(colnames(data))
for (i in 1:length(colVector)) {
if (i<=max(dataOneColumns)) {colVector[i] = "green"} else {colVector[i] = "red"}
}
if (chosenTaxonomy=="genus"){
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
} else {
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
}
# building single network with SPRING as association measure - Full dataset, both treated and untreated
net_single_fullSet <- netConstruct(data,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.6,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_fullSet <- netAnalyze(net_single_fullSet,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
#?summary.microNetProps
summary(props_single_fullSet, numbNodes = 5L)
plot(props_single_fullSet,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman",chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Positive","Negative"),
cex=0.6,col=c("green","red"),pch=c(".","."),lwd = c(3,3))
legend(x=0.85,y=0.6,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
# loading data
chosenWeek      <- "Week 02"
chosenTaxonomy  <- "species"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
# filtering data
inData <- data_filtering(inData)
# excluding testID and OUA (antibiotics used or not)
#inData = data
testID  <- inData$testID
OUA     <- inData$OUA
data = subset(inData, select = -c(testID, OUA))
dataOneColumns <- grep(x = colnames(data), pattern = "DATA.*")
colVector <- 1:length(colnames(data))
for (i in 1:length(colVector)) {
if (i<=max(dataOneColumns)) {colVector[i] = "green"} else {colVector[i] = "red"}
}
if (chosenTaxonomy=="genus"){
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
} else {
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
}
# building single network with SPRING as association measure - Full dataset, both treated and untreated
net_single_fullSet <- netConstruct(data,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.6,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_fullSet <- netAnalyze(net_single_fullSet,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
#?summary.microNetProps
summary(props_single_fullSet, numbNodes = 5L)
plot(props_single_fullSet,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman",chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Positive","Negative"),
cex=0.6,col=c("green","red"),pch=c(".","."),lwd = c(3,3))
legend(x=0.85,y=0.6,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
# loading data
chosenWeek      <- "Week 06"
chosenTaxonomy  <- "species"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
# filtering data
inData <- data_filtering(inData)
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
# filtering data
inData <- data_filtering(inData)
# loading data
chosenWeek      <- "Week 06"
chosenTaxonomy  <- "genus"
inData <- extracting_data_KAT(whichWeek = chosenWeek, whichTaxLevel = chosenTaxonomy)
# filtering data
inData <- data_filtering(inData)
# excluding testID and OUA (antibiotics used or not)
#inData = data
testID  <- inData$testID
OUA     <- inData$OUA
data = subset(inData, select = -c(testID, OUA))
dataOneColumns <- grep(x = colnames(data), pattern = "DATA.*")
colVector <- 1:length(colnames(data))
for (i in 1:length(colVector)) {
if (i<=max(dataOneColumns)) {colVector[i] = "green"} else {colVector[i] = "red"}
}
if (chosenTaxonomy=="genus"){
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)","\\1",colnames(data))
} else {
colnames(data)=gsub("DATA.Bacteria_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
colnames(data)=gsub("DATA.Archaea_[A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.][A-Za-z]*[_.](.*)[_.](.*)","\\1",colnames(data))
}
# building single network with SPRING as association measure - Full dataset, both treated and untreated
net_single_fullSet <- netConstruct(data,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.6,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_fullSet <- netAnalyze(net_single_fullSet,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
#?summary.microNetProps
summary(props_single_fullSet, numbNodes = 5L)
plot(props_single_fullSet,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman",chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Positive","Negative"),
cex=0.6,col=c("green","red"),pch=c(".","."),lwd = c(3,3))
legend(x=0.85,y=0.6,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
# network untreated, single network with spearman association
data_untreated <- data[which(OUA==0),]
net_single_untreated <- netConstruct(data_untreated,
#filtTax = "highestFreq",
#filtTaxPar = list(highestFreq = 100),
#filtSamp = "totalReads",
#filtSampPar = list(totalReads = 1000),
measure = "spearman",thresh = 0.6,
measurePar = list(nlambda=10,
rep.num=10),
normMethod = "none",
zeroMethod = "none",
sparsMethod = "threshold",
dissFunc = "signed",
verbose = 3,
seed = 123456)
props_single_untreated <- netAnalyze(net_single_untreated,
centrLCC = TRUE,
clustMethod = "cluster_fast_greedy",
hubPar = "eigenvector",
weightDeg = FALSE, normDeg = FALSE)
plot(props_single_untreated,
labelScale = F,
cexLabels = 1.3,
title1 = paste("Single network with Spearman, untreated", chosenWeek, chosenTaxonomy),
showTitle = T,
cexTitle = 2.3,
nodeColor = colVector)
legend(x=0.85,y=0.9,legend=c("Metataxonomic","Genomic"),
cex=0.6,col=c("green","red"),pch=c(16,16),lwd = c(3,3))
